version: 2.1
executors:
  ci-executor:
    docker:
      - image: circleci/node:12.9.1-browsers
    working_directory: ~/repo
commands:
  getdependencies:
    description: "Download and cache all the necessary dependencies"
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --immutable
      - run:
          name: Print yarn Version
          command: 'yarn -v'
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

jobs:
    build:
        executor: ci-executor
        steps:
            - getdependencies
            - run:
                name: build
                command: 'yarn build'

            - run:
                name: Copy deployment artifacts to workspace
                command: |
                  ls -la
                  cp -r ./build/ /tmp/
                  cp ./manifest.yml /tmp/
                  ls -la

            - store_artifacts:
                path: /tmp/manifest.yml

            - store_artifacts:
                path: /tmp/build/

            - persist_to_workspace:
                root: /tmp
                paths:
                  - manifest.yml
                  - build
    test:
        executor: ci-executor
        steps:
            - getdependencies
            - run:
                name: Run Tests
                command: 'yarn test'
    dark-deploy:
        docker:
         - image: eddiewebb/queue-circleci-openjdk:8-jdk-browsers
        working_directory: ~/deploy
        steps:
            - attach_workspace:
                at: /tmp
            - run:
                name: Setup CF CLI
                command: |
                  curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
                  sudo dpkg -i cf-cli_amd64.deb
                  cf -v
                  cf login -a https://api.fr.cloud.gov -u $DEPLOYER_SERVICE_ACCOUNT_USERNAME -p $CF_PASSWORD -o $CF_ORG  -s "dev"
            - run:
                name: CF Deploy
                command: |
                  # push artifacts , and set environment variables before running `cf start`.
                  # Copy deployable jar and CF Manifest to current dir
                  cp -r /tmp/build/ .
                  cp /tmp/manifest.yml .
                  # cf push --no-start fheo-dark -n fheo-dark
                  cf push --no-start fheo-dark -f manifest.yml -n fheo-dark
                  # Pass CircleCI variables to Cloud Foundry (optional)
                  # cf set-env <app-name-dark> circle_build_num ${CIRCLE_BUILD_NUM}
                  # cf set-env <app-name-dark> circle_commit ${CIRCLE_SHA1}
                  # cf set-env <app-name-dark> circle_workflow_guid ${CIRCLE_WORKFLOW_ID}
                  # cf set-env <app-name-dark> circle_user ${CIRCLE_PROJECT_USERNAME}
                  # cf set-env <app-name-dark> circle_repo ${CIRCLE_PROJECT_REPONAME}
                  # Start the application
                  cf start fheo-dark
                   # Verify new version is working on fheo-dark URL.
                  HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://fheo-dark.app.cloud.gov/`
                  if [ "$HTTPCODE" -ne 200 ];then
                    echo "fheo-dark route note available, failing deploy"
                    exit 1
                  fi
                  # Ensure dark route is exclusive to fheo-dark app
                  cf unmap-route fheo app.cloud.gov -n fheo-dark || echo "Dark Route Already exclusive"
    FHEO-acceptance-tests-Dark: # Test automation code repo
      machine:
        image: ubuntu-2004:202101-01 # # recommended linux image - includes Ubuntu 20.04, docker-compose 1.27.4
      steps:
        - run:
            name: "install NPM"
            command: |
              $sudo npm install -g npm@latest > /dev/null 2>&1 || \
              npm install -g npm@latest > /dev/null 2<&1
              npm config -g delete ca
              $SUDO npm install -g newman
        - run:
            name: "checkout and run tests"
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              newman run "formservice-testing/formservice/collections/FHEOFormService.postman_collection.json" -e "formservice-testing/formservice/environments/EnvironmentVar.postman_environment.json" -d "formservice-testing/formservice/data/FHEO-Service-TestData.csv"
    FHEO-uitests-Set1-Dark:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionSet1' -DcheckAccessibility=false -Denv='fheodark'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-uitests-Set2-Dark:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Edge -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionSet2' -DcheckAccessibility=false -Denv='fheodark'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-uitests-Set3-Dark:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Safari -Dbrowser_version='latest' -Dos='OS X' -Dos_version='Big Sur' -Dstage='FHEORegressionSet3' -DcheckAccessibility=false -Denv='fheodark'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-uitests-Set4-Dark:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionSet4' -DcheckAccessibility=false -Denv='fheodark'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-ErrSpecs-Dark:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionErrSpec' -DcheckAccessibility=false -Denv='fheodark'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-508Specs-Dark:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegression508Test' -DcheckAccessibility=true -Denv='fheodark'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
        - store_artifacts:
            path: /home/circleci/project/target/accessibilityReport

    live-deploy:
        docker:
         - image: eddiewebb/queue-circleci-openjdk:8-jdk-browsers
        working_directory: ~/deploy
        steps:
              - run:
                      name: Setup CF CLI
                      command: |
                        curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
                        sudo dpkg -i cf-cli_amd64.deb
                        cf -v
                        cf login -a https://api.fr.cloud.gov -u $DEPLOYER_SERVICE_ACCOUNT_USERNAME -p $CF_PASSWORD -o $CF_ORG  -s "dev"
              - run:
                  name: Re-route live Domain to latest
                  command: |
                            # Send "real" url to new version
                            cf map-route fheo-dark app.cloud.gov -n fheo
                            # Stop sending traffic to previous version
                            cf unmap-route fheo app.cloud.gov -n fheo
                            # stop previous versions
                            cf stop fheo
                            # delete previous version
                            cf delete fheo -f
                            # Switch name of "fheo-dark" version to claim correct name
                            cf rename fheo-dark fheo
    FHEO-acceptance-test-Dev: # Test automation code repo
      machine:
        image: ubuntu-2004:202101-01 # # recommended linux image - includes Ubuntu 20.04, docker-compose 1.27.4
      steps:
        - run:
            name: "install NPM"
            command: |
              $sudo npm install -g npm@latest > /dev/null 2>&1 || \
              npm install -g npm@latest > /dev/null 2<&1
              npm config -g delete ca
              $SUDO npm install -g newman
        - run:
            name: "checkout and run tests"
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              newman run "formservice-testing/formservice/collections/FHEOFormService.postman_collection.json" -e "formservice-testing/formservice/environments/EnvironmentVar.postman_environment.json" -d "formservice-testing/formservice/data/FHEO-Service-TestData.csv"
    FHEO-uitest-Set1-Dev:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionSet1' -DcheckAccessibility=false -Denv='fheodev'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-uitest-Set2-Dev:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Edge -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionSet2' -DcheckAccessibility=false -Denv='fheodev'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-uitest-Set3-Dev:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Safari -Dbrowser_version='latest' -Dos='OS X' -Dos_version='Big Sur' -Dstage='FHEORegressionSet3' -DcheckAccessibility=false -Denv='fheodev'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-uitest-Set4-Dev:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            no_output_timeout: 120m
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionSet4' -DcheckAccessibility=false -Denv='fheodev'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-ErrSpec-Dev:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegressionErrSpec' -DcheckAccessibility=false -Denv='fheodev'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
    FHEO-508Spec-Dev:
      machine:
        image: ubuntu-2004:202101-01
      steps:
        - checkout
        - run:
            name: "Clone and install maven for running command"
            command: |
              git clone https://{$CIRCLE_TOKEN}@github.com/18F/formservice-testing.git
              cd formservice-testing
              mvn clean webdriverextensions:install-drivers test-compile test allure:report -DargLine="-Dlocal=false -Dbrowser=Chrome -Dbrowser_version='latest' -Dos='Windows' -Dos_version='10' -Dstage='FHEORegression508Test' -DcheckAccessibility=true -Denv='fheodev'"
        - store_artifacts:
            path: /home/circleci/project/target/allure-reports
        - store_artifacts:
            path: /home/circleci/project/target/accessibilityReport


workflows:
  version: 2
  Build_Test_Deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - dark-deploy:
          requires:
            - test
      - FHEO-acceptance-tests-Dark:
          requires:
            - dark-deploy
          filters:
            branches:
              only: develop
      - FHEO-508Specs-Dark:
          requires:
            - dark-deploy
          filters:
            branches:
              only: develop
      - FHEO-ErrSpecs-Dark:
          requires:
            - FHEO-508Specs-Dark
          filters:
            branches:
              only: develop
      - FHEO-uitests-Set1-Dark:
          requires:
            - FHEO-508Specs-Dark
          filters:
            branches:
              only: develop
      - FHEO-uitests-Set2-Dark:
          requires:
            - FHEO-ErrSpecs-Dark
          filters:
            branches:
              only: develop
      - FHEO-uitests-Set3-Dark:
          requires:
            - FHEO-uitests-Set2-Dark
          filters:
            branches:
              only: develop
      - FHEO-uitests-Set4-Dark:
          requires:
            - FHEO-uitests-Set1-Dark
          filters:
            branches:
              only: develop
      - hold:
          type: approval
          requires:
             - dark-deploy
          filters:
            branches:
              only: develop
      - live-deploy:
          requires:
            - hold # manual approval required via the CircleCI UI to run the live-deploy job
      - FHEO-acceptance-test-Dev:
          requires:
            - live-deploy
          filters:
            branches:
              only: develop
      - FHEO-ErrSpec-Dev:
          requires:
            - live-deploy
          filters:
            branches:
              only: develop
      - FHEO-508Spec-Dev:
          requires:
            - FHEO-ErrSpec-Dev
          filters:
            branches:
              only: develop
      - FHEO-uitest-Set1-Dev:
          requires:
            - FHEO-ErrSpec-Dev
          filters:
            branches:
              only: develop
      - FHEO-uitest-Set2-Dev:
          requires:
            - FHEO-ErrSpec-Dev
          filters:
            branches:
              only: develop
      - FHEO-uitest-Set3-Dev:
          requires:
            - FHEO-508Spec-Dev
          filters:
            branches:
              only: develop
      - FHEO-uitest-Set4-Dev:
          requires:
            - FHEO-uitest-Set1-Dev
          filters:
            branches:
              only: develop